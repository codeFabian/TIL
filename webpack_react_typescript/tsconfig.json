{
  "compilerOptions": {
    "lib": ["DOM", "DOM.Iterable", "ESNext"],
    //유형 검사 프로세스에 포함될 표준 유형입니다. 우리의 경우에는 브라우저 DOM 및 최신 버전의 ECMAScript에 대한 유형을 사용하도록 선택했습니다.
    "allowJs": true,
    //JavaScript 파일 컴파일 허용 여부입니다
    "allowSyntheticDefaultImports": true,
    //유형 검사 프로세스에서 기본 내보내기없이 모듈에서 기본 가져 오기를 허용합니다.
    "skipLibCheck": true,
    //모든 유형 선언 파일 ( *.d.ts) 의 유형 검사를 건너 뛸지 여부 .
    "esModuleInterop": true,
    //Babel과의 호환성을 가능하게합니다.
    "strict": true,
    //유형 검사 수준을 매우 높게 설정합니다. 이것이 사실이면 프로젝트는 엄격 모드 에서 실행 중이라고 합니다 .
    "forceConsistentCasingInFileNames": true,
    //참조 된 파일 이름의 대 / 소문자가 유형 검사 프로세스 중에 일관성이 있는지 확인합니다.
    "moduleResolution": "Node",
    //프로젝트에 대한 모듈 종속성을 해결하는 방법 .
    "resolveJsonModule": true,
    //이렇게하면 .json구성 파일에 유용한 파일에 모듈이있을 수 있습니다.
    "isolatedModules": true,
    "noEmit": true,
    //컴파일 과정에서 TypeScript 생성 코드를 억제할지 여부입니다. trueBabel이 JavaScript 코드를 생성하기 때문에 이것은 우리 프로젝트에 있습니다.
    "jsx": "react"
    //.tsc 파일에서 JSX지원여부
  },
  "include": ["src"]
  // TypeScript가 확인할 파일 및 폴더입니다. 프로젝트에서 src폴더의 모든 파일을 지정했습니다 .
}
